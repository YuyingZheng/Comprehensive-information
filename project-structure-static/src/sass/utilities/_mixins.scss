// @font-face
$fonts-path: '../fonts';
@mixin fontface($fontfamily, $filename, $fontweight: normal, $fontstyle: normal) {
    @font-face {
        font-family: $fontfamily;
        src: url('#{$fonts-path}/#{$filename}.eot?#iefix') format('embedded-opentype'),
        url('#{$fonts-path}/#{$filename}.woff2') format('woff2'),
        url('#{$fonts-path}/#{$filename}.woff') format('woff'),
        url('#{$fonts-path}/#{$filename}.ttf') format('truetype'),
        url('#{$fonts-path}/#{$filename}.svg#{$filename}') format('svg');
        src: url('#{$fonts-path}/#{$filename}.eot');
        font-weight: $fontweight;
        font-style: $fontstyle;
    }
}

//clearfix
@mixin clearfix {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

//float
@mixin float-left {
    float: left !important;
}

@mixin float-right {
    float: right !important;
}

@mixin float-none {
    float: none !important;
}

//placeholder
@mixin placeholder($color) {
    &:-moz-placeholder {
        // Firefox 4-18
        color: $color;
        opacity: 1;
    }
    &::-moz-placeholder {
        // Firefox 19+
        color: $color;
        opacity: 1;
    }
    &:-ms-input-placeholder {
        // Internet Explorer 10+
        color: $color;
    }
    &::-webkit-input-placeholder {
        // Safari and Chrome
        color: $color;
    }
}

//opacity
@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity*100;
    filter: alpha(opacity=$opacity-ie);
}

//text-hide
@mixin text-hide {
    font: 0/0 a;
    color: transparent;
    text-shadow: none;
    background-color: transparent;
    border: 0;
}

//text-overflow
@mixin text-ellipsis {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

//border-radius(one side)
@mixin border-top-radius($radius) {
    border-top-left-radius: $radius;
    border-top-right-radius: $radius;
}

@mixin border-right-radius($radius) {
    border-top-right-radius: $radius;
    border-bottom-right-radius: $radius;
}

@mixin border-bottom-radius($radius) {
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
}

@mixin border-left-radius($radius) {
    border-bottom-left-radius: $radius;
    border-top-left-radius: $radius;
}

//list-rest
@mixin list-unstyle{
    list-style-type: none;
    margin-top: 0;
    margin-bottom: 0;
    padding-left: 0;
}

//triangle arrow
@mixin triangleArrow($direction:"down",
$size:10px,
$color:#fff,
$center:50%,
$margin:-1px,
$pseudo: after) {
    position: relative;
    &:#{$pseudo} {
        position: absolute;
        content: "";
        width: 0;
        height: 0;
        @if $direction=="top" {
            bottom: 100%;
            left: $center;
            margin-left: $size * -1;
            margin-bottom: $margin;
            border-left: $size solid transparent;
            border-right: $size solid transparent;
            border-bottom: $size solid $color;
        }
        @else if $direction=="right" {
            left: 100%;
            top: $center;
            margin-left: $margin;
            margin-top: $size * -1;
            border-top: $size solid transparent;
            border-bottom: $size solid transparent;
            border-left: $size solid $color;
        }
        @else if $direction=="down" {
            top: 100%;
            left: $center;
            margin-top: $margin;
            margin-left: $size * -1;
            border-left: $size solid transparent;
            border-right: $size solid transparent;
            border-top: $size solid $color;
        }
        @else if $direction=="left" {
            right: 100%;
            top: $center;
            margin-right: $margin;
            margin-top: $size * -1;
            border-top: $size solid transparent;
            border-bottom: $size solid transparent;
            border-right: $size solid $color;
        }
    }
}
//new arrow
@mixin arrow_helper($direction, $align, $alignPosition, $arrowSize, $arrowColor) {
    @if $direction=="top" {
        border-width: 0 $arrowSize $arrowSize;
        border-bottom-color: $arrowColor;
        top: -$arrowSize;
    }
    @if $direction=="bottom" {
        border-width: $arrowSize $arrowSize 0;
        border-top-color: $arrowColor;
        bottom: -$arrowSize;
    }
    @if $direction=="left" {
        border-width: $arrowSize $arrowSize $arrowSize 0;
        border-right-color: $arrowColor;
        left: -$arrowSize;
    }
    @if $direction=="right" {
        border-width: $arrowSize 0 $arrowSize $arrowSize;
        border-left-color: $arrowColor;
        right: -$arrowSize;
    }
    @if $direction=="bottom" or $direction=="top" {
        @if $align=="center" {
            right: 50%;
            margin-right: -$arrowSize;
        }
        @else if $align=="left" {
            left: $alignPosition;
        }
        @else if $align=="right" {
            right: $alignPosition;
        }
    }
    @if $direction=="right" or $direction=="left" {
        @if $align=="center" {
            top: 50%;
            margin-top: -$arrowSize;
        }
        @else if $align=="top" {
            top: $alignPosition;
        }
        @else if $align=="bottom" {
            bottom: $alignPosition;
        }
    }
}

@mixin arrow($direction: "top", $align:"center", $alignPosition: 50%, $size: 20px, $color: #f6f6f6, $borderColor: "none", $borderSize: 3px) {
    $selector: "&:after, &:before";
    @if $borderColor=="none" {
        $selector: "&:after";
    }
    #{$selector} {
        content: " ";
        height: 0;
        width: 0;
        border: solid transparent;
        position: absolute;
        pointer-events: none;
        visibility: visible;
    }
    &:after {
        @include arrow_helper($direction, $align, $alignPosition, $size, $color);
    }
    @if $borderColor !="none" {
        @if $alignPosition !=50% {
            $alignPosition : $alignPosition - $borderSize;
        }
        &:before {
            @include arrow_helper($direction, $align, $alignPosition, $size + $borderSize, $borderColor);
        }
    }
}